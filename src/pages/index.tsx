import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import { FaPlus } from 'react-icons/fa'
import { v4 as uuidv4 } from 'uuid';


type state = "const" | "args" | "and" | "or" | ""

export default function Home() {

  const [args, setargs] = useState<any[]>([])
  const [dropdownState, setdropdownState] = useState<state>("")
  const [input, setInput] = useState<string>("")
  const [selectedConstValue, setSelectedConstValue] = useState<boolean>(false)
  const [result, setResult] = useState<boolean | undefined>(undefined)


  useEffect(() => {
    setargs([{
      name: "MyArg",
      id: uuidv4(),
      value: undefined
    }])
  }, [])

  useEffect(() => {
    console.log(args)
  }, [args])




  const RenderDropDowns = () => {
    switch (dropdownState) {
      case "const":
        return (
          <div className="flex items-center justify-center">
            <select onChange={(e) => setResult(e.target.value.includes("true"))} className='w-[130px] h-[40px]' name="false" id="ops">
              <option value={"true"}>true</option>
              <option value={"false"}>false</option>
            </select>
            <button onClick={() => setdropdownState("")} className="flex items-center justify-center bg-slate-200 h-[40px] w-[40px]">
              <FaPlus className='rotate-45' color='black' size={18} />
            </button>
          </div>
        )
      case "args":
        return (
          <div className="flex items-center justify-center">
            <select onChange={(e) => setSelectedConstValue(e.target.value === "true" ? true : false)} className='w-[130px] h-[40px]' name="false" id="ops">
              {
                args.length !== 0 ? args.map((item, i) => (
                  <option key={i} value={item?.name?.toString() ?? "undefined"}>{item?.name?.toString() ?? "undefined"}</option>
                )) : null
              }

            </select>
            <button onClick={() => setdropdownState("")} className="flex items-center justify-center bg-slate-200 h-[40px] w-[40px]">
              <FaPlus className='rotate-45' color='black' size={18} />
            </button>
          </div>
        )
      default:
        return (
          <select onChange={(e) => setSelectedConstValue(e.target.value === "true" ? true : false)} className='w-[130px] h-[40px]' name="false" id="ops">
            <option value={"true"}>true</option>
            <option value={"false"}>false</option>
          </select>
        )
    }
  }


  return (
    <div className='w-screen h-screen flex flex-col items-center justify-center'>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-[70%] h-[80%] flex flex-col items-start justify-start ">
        {
          args.map((item, i) => (
            <div key={i} className="flex items-center justify-center">
              <input placeholder={item?.name} onChange={(e) => setargs(args.map((val) => val.id === item.id ? { ...val, name: e.target.value } : val))} type="text" className="border-2 h-[40px] placeholder:text-black" />
              <select onChange={(e) => setargs(args.map((val) => val.id === item.id ? { ...val, value: e.target.value.includes("true") } : val))} className='w-[130px] h-[40px]' name="false" id="ops">
                <option value={"false"}>false</option>
                <option value={"true"} >true</option>
              </select>
            </div>
          ))
        }
        <button onClick={() => {
          setargs([...args, { id: uuidv4(), name: "MyArg", value: undefined }])
        }} className="self-start w-[160px] h-[40px] bg-slate-400">+ add arg</button>

        <div className="flex items-center justify-center">
          {dropdownState === "" ? (
            <div className="flex items-center justify-center">
              <select onChange={(e) => setdropdownState(e.target.value as state)} className='w-[130px] h-[40px]' name="false" id="ops">
                <option value={""}>select</option>
                <option value={"const"}>constant</option>
                <option value={"args"}>Argument</option>
                <option value={"and"}>and</option>
                <option value={"or"}>or</option>
              </select>
              <button onClick={() => setdropdownState("")} className="flex items-center justify-center bg-slate-200 h-[40px] w-[40px]">
                <FaPlus className='rotate-45' color='black' size={18} />
              </button>
            </div>
          ) : (<RenderDropDowns />)}
        </div>
        <h1 className="text-black"> Result : {result === undefined ?"undefined":result.toString()}</h1>
      </div>
    </div>
  )
}
